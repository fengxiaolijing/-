```
FROM centos

COPY apache-maven /apache-maven
COPY jdk1.8.0_151 /jdk1.8.0_151

ENV JAVA_HOME=/usr/local/jdk \
    JAVA_BIN=/usr/local/jdk/bin \
    JRE_HOME=/usr/local/jdk/jre

RUN ln -sf /jdk1.8.0_151 /usr/local/jdk &&  \
    ln -sf /jdk1.8.0_151/bin/java /usr/bin/ \
    ln -sf /apache-maven/bin/mvn /usr/bin/
```
```
FROM docker:18.09 as DockerCli
 
FROM jenkinsci/jnlp-slave:latest as JNLP
 
FROM slzcc/java:java-jdk-1.8.0.201 AS JDK
 
FROM centos:latest
 
USER root
 
# install Base Tools
RUN yum install -y epel-release && \
    yum install -y vim wget curl vim net-tools telnet unzip dig
 
# install Chinese Support
RUN yum install -y kde-l10n-Chinese
 
# install Jenkins slave Plugin
COPY --from=JNLP /usr/local/bin/jenkins-slave /usr/local/bin/
COPY --from=JNLP /usr/share/jenkins/slave.jar /usr/share/jenkins/slave.jar
 
# install Kubectl
RUN wget -qO- https://dl.k8s.io/v1.13.6/kubernetes-client-linux-amd64.tar.gz | tar zx -C /tmp/ && \
    mv /tmp/kubernetes/client/bin/* /usr/local/bin
 
# install Docker Cli
COPY --from=DockerCli /usr/local/bin/docker /usr/local/bin
 
# install Sonar Scanner Cli
RUN wget -qO- https://mirror.shileizcc.com/SonarQube/sonar-scanner-cli-3.0.3.778.zip > /tmp/sonar-scanner-cli-3.0.3.778.zip && \
    unzip -d /tmp/ /tmp/sonar-scanner-cli-3.0.3.778.zip && \
    mv /tmp/sonar-scanner-3.0.3.778/bin/* /usr/local/bin/ && \
    rm -rf /tmp/sonar-scanner-cli-3.0.3.778.zip
 
# install Java JDK
COPY --from=JDK /jdk1.8.0_201 /usr/local/jdk
#RUN mkdir -p /usr/local/jdk &&  wget -qO- https://mirror.shileizcc.com/JDK/jdk-8u201-linux-x64.tar.gz | tar zx -C /usr/local/jdk
 
RUN ln -sf /usr/local/jdk/bin/* /usr/bin/
 
ENV JAVA_HOME=/usr/local/jdk \
    JAVA_BIN=/usr/local/jdk/bin \
    JRE_HOME=/usr/local/jdk/jre
 
# install NPM
RUN yum install -y nodejs && \
    npm install n -g && n stable
 
RUN npm install -g cnpm
 
# install Maven
RUN wget -qO- http://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz | tar zx -C / && \
    ln -sf /apache-maven-3.6.1/bin/mvn /usr/local/bin/
 
ENV M2_HOME=/apache-maven-3.6.1
 
VOLUME ["/root/.m2"]
 
ENTRYPOINT ["/usr/local/bin/jenkins-slave"]
```